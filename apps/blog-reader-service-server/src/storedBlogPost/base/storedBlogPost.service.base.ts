/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StoredBlogPost as PrismaStoredBlogPost } from "@prisma/client";

export class StoredBlogPostServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StoredBlogPostCountArgs, "select">
  ): Promise<number> {
    return this.prisma.storedBlogPost.count(args);
  }

  async storedBlogPosts(
    args: Prisma.StoredBlogPostFindManyArgs
  ): Promise<PrismaStoredBlogPost[]> {
    return this.prisma.storedBlogPost.findMany(args);
  }
  async storedBlogPost(
    args: Prisma.StoredBlogPostFindUniqueArgs
  ): Promise<PrismaStoredBlogPost | null> {
    return this.prisma.storedBlogPost.findUnique(args);
  }
  async createStoredBlogPost(
    args: Prisma.StoredBlogPostCreateArgs
  ): Promise<PrismaStoredBlogPost> {
    return this.prisma.storedBlogPost.create(args);
  }
  async updateStoredBlogPost(
    args: Prisma.StoredBlogPostUpdateArgs
  ): Promise<PrismaStoredBlogPost> {
    return this.prisma.storedBlogPost.update(args);
  }
  async deleteStoredBlogPost(
    args: Prisma.StoredBlogPostDeleteArgs
  ): Promise<PrismaStoredBlogPost> {
    return this.prisma.storedBlogPost.delete(args);
  }
}
